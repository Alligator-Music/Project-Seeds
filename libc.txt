this operating system has 2 custom c libraries: A libc and a libk (kernel utilities)

libc functions & stuff:
    cout(const char* fmt, ...); // basically a printf with custom escape sequences and stuff
    cin();                      // returns string input from keybd, terminated by enter
    cmd(const char* str);       // executes a system command, similiar to system()

cout:
    int cout(const char* fmt, ...);

    this function prints to the screen with the format string (literally printf).

    current formating types:
        %s - string
        %c - character
        %x - hexadecimal
        %d - decimal number

    control characters:
        the control characters can only be printed through strings passed through the %s, not
        directly through the fmt string. for example:
            cout("\x11\x01\x04Hi"); // does not change the color to red 
            cout("%sHi", "\x11\x01\x04"); // changes the color to red and prints Hi

        control character sequences (CCS's) always start with the DEVICE_CONTROL_1 character (0x11).
        after that, is always the function, and then the args for the function.

        current CCS's:
            0x01 - change color - \x11 \x01 \x{8bit color to change to}
            0x02 - clear sceren - \x11 \x02 \x{screen color}
